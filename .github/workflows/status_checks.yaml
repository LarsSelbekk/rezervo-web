name: CI
on:
    pull_request:
    push:
        branches: [main]

    workflow_dispatch:

jobs:
    install:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: "18"
                  cache: "yarn"
            - name: Install dependencies
              run: yarn install --frozen-lockfile
            - name: Cache install
              uses: actions/cache@v3
              with:
                  path: ./node_modules/
                  key: ${{ github.sha }}-install
            - name: Cache Cypress
              uses: actions/cache@v3
              with:
                  path: ~/.cache/Cypress/
                  key: ${{ github.sha }}-cypress

    code_style:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - uses: actions/checkout@v3
            - name: Retrieve install cache
              uses: actions/cache@v3
              with:
                  path: ./node_modules/
                  key: ${{ github.sha }}-install
            - name: prettier
              run: yarn prettier:check

    lint:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - uses: actions/checkout@v3
            - name: Retrieve install cache
              uses: actions/cache@v3
              with:
                  path: ./node_modules/
                  key: ${{ github.sha }}-install
            - name: eslint
              run: yarn lint

    build:
        runs-on: ubuntu-latest
        needs: install
        steps:
            - uses: actions/checkout@v3
            - name: Retrieve Install Cache
              uses: actions/cache@v3
              with:
                  path: ./node_modules/
                  key: ${{ github.sha }}-install
            - name: Retrieve Next cache
              uses: actions/cache@v3
              with:
                  path: ${{ github.workspace }}/.next/cache
                  # Generate a new cache whenever packages or source files change.
                  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                  # If source files changed but packages didn't, rebuild from a prior cache.
                  restore-keys: |
                      ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
            - name: Build
              run: yarn build
            - name: Cache build
              uses: actions/cache@v3
              with:
                  path: ./.next/
                  key: ${{ github.sha }}-build

    cypress:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v3
            - name: Retrive install cache
              uses: actions/cache@v3
              with:
                  path: ./node_modules/
                  key: ${{ github.sha }}-install
            - name: Retrive Cypress cache
              uses: actions/cache@v3
              with:
                  path: ~/.cache/Cypress/
                  key: ${{ github.sha }}-cypress
            - name: Retrive build cache
              uses: actions/cache@v3
              with:
                  path: ./.next/
                  key: ${{ github.sha }}-build
            - name: Run Cypress
              uses: cypress-io/github-action@v5
              with:
                  install: false
                  start: yarn start
